#pragma once
#include <Il2Cpp/Il2Cpp.h>
namespace GameBase {

class SceneInfo
{
public: 

	static Il2CppClass *StaticClass() {
		return (Il2CppClass *)(Il2Cpp::GetClass("Assembly-CSharp.dll", "GameBase", "SceneInfo"));
	}

	template <typename T = uintptr_t> T& cameraEffect() {
		return *(T*)((uintptr_t)this + 0x24);
	}
	template <typename T = uintptr_t> T& postEffectProfile() {
		return *(T*)((uintptr_t)this + 0x28);
	}
	template <typename T = uintptr_t> T& postEffectProfile_1() {
		return *(T*)((uintptr_t)this + 0x2C);
	}
	template <typename T = uintptr_t> T& postEffectProfile_2() {
		return *(T*)((uintptr_t)this + 0x30);
	}
	template <typename T = float> T& OverrideFarClipPlane() {
		return *(T*)((uintptr_t)this + 0x34);
	}
	template <typename T = float> T& ShadowDistance() {
		return *(T*)((uintptr_t)this + 0x38);
	}
	template <typename T = float> T& mOldDist() {
		return *(T*)((uintptr_t)this + 0x3C);
	}
	template <typename T = uintptr_t> T& m_commonEffectTint() {
		return *(T*)((uintptr_t)this + 0x40);
	}
	template <typename T = float> T& m_commonEffectTintScale() {
		return *(T*)((uintptr_t)this + 0x50);
	}
	template <typename T = Il2CppList<uintptr_t>*> T& FixedBoundSceneMeshRenderers() {
		return *(T*)((uintptr_t)this + 0x54);
	}
	template <typename T = Il2CppList<Il2CppVector3>*> T& FixedBoundSceneMeshRenderers_Center() {
		return *(T*)((uintptr_t)this + 0x58);
	}
	template <typename T = Il2CppList<Il2CppVector3>*> T& FixedBoundSceneMeshRenderers_Size() {
		return *(T*)((uintptr_t)this + 0x5C);
	}
	template <typename T = Il2CppList<uintptr_t>*> T& LODGroupList() {
		return *(T*)((uintptr_t)this + 0x60);
	}
	template <typename T = Il2CppList<float>*> static T& LODDistForLow() {
		return *(T*)((uintptr_t)StaticClass()->static_fields + 0x0);
	}
	template <typename T = Il2CppList<float>*> static T& LODDistForVeryLow() {
		return *(T*)((uintptr_t)StaticClass()->static_fields + 0x4);
	}
	template <typename T = Il2CppList<uintptr_t>*> T& AutoGen_HideDetailForLow() {
		return *(T*)((uintptr_t)this + 0x64);
	}
	template <typename T = Il2CppList<uintptr_t>*> T& CustomLodValueForVeryLow() {
		return *(T*)((uintptr_t)this + 0x68);
	}
	template <typename T = bool> T& SpecialLODForLowQuality() {
		return *(T*)((uintptr_t)this + 0x6C);
	}
	template <typename T = uintptr_t> static T& _c__Hotfix0_ctor() {
		return *(T*)((uintptr_t)StaticClass()->static_fields + 0x8);
	}
	template <typename T = uintptr_t> static T& __Hotfix0_OnValidate() {
		return *(T*)((uintptr_t)StaticClass()->static_fields + 0xC);
	}
	template <typename T = uintptr_t> static T& __Hotfix0_OnDestroy() {
		return *(T*)((uintptr_t)StaticClass()->static_fields + 0x10);
	}
	template <typename T = uintptr_t> static T& __Hotfix0_Start() {
		return *(T*)((uintptr_t)StaticClass()->static_fields + 0x14);
	}
	template <typename T = uintptr_t> static T& __Hotfix0_ApplySetting() {
		return *(T*)((uintptr_t)StaticClass()->static_fields + 0x18);
	}
	template <typename T = uintptr_t> static T& __Hotfix0_SetSceneActive() {
		return *(T*)((uintptr_t)StaticClass()->static_fields + 0x1C);
	}
	template <typename T = uintptr_t> static T& __Hotfix0_RefreshFixedSceneMeshRendererBound() {
		return *(T*)((uintptr_t)StaticClass()->static_fields + 0x20);
	}
	template <typename T = uintptr_t> static T& __Hotfix0_RefreshLODGroupDist() {
		return *(T*)((uintptr_t)StaticClass()->static_fields + 0x24);
	}
	template <typename T = uintptr_t> static T& __Hotfix0_SetAutoGeneratedLodGroupsSize() {
		return *(T*)((uintptr_t)StaticClass()->static_fields + 0x28);
	}
	template <typename T = uintptr_t> static T& __Hotfix0_DestroyDetailsForVeryLowQuality() {
		return *(T*)((uintptr_t)StaticClass()->static_fields + 0x2C);
	}
	template <typename T = uintptr_t> static T& __Hotfix0_RefreshCutomLODValueForVeryLowQuality() {
		return *(T*)((uintptr_t)StaticClass()->static_fields + 0x30);
	}
	template <typename T = uintptr_t> static T& __Hotfix0_ClearFixedSceneMeshRendererBounds() {
		return *(T*)((uintptr_t)StaticClass()->static_fields + 0x34);
	}
	template <typename T = uintptr_t> static T& __Hotfix0_ClearHideInLowRendererRecord() {
		return *(T*)((uintptr_t)StaticClass()->static_fields + 0x38);
	}
	template <typename T = uintptr_t> static T& __Hotfix0_AddToHideInLowRendererRecord() {
		return *(T*)((uintptr_t)StaticClass()->static_fields + 0x3C);
	}

	template <typename T = void> T OnValidate() {
		return ((T (*)(SceneInfo*))(Il2CppBase() + 0x2DF7DCC))(this);
	}
	template <typename T = void> T OnDestroy() {
		return ((T (*)(SceneInfo*))(Il2CppBase() + 0x2DF7F60))(this);
	}
	template <typename T = void> T Start() {
		return ((T (*)(SceneInfo*))(Il2CppBase() + 0x2DF8060))(this);
	}
	template <typename T = void> T ApplySetting() {
		return ((T (*)(SceneInfo*))(Il2CppBase() + 0x2DF8250))(this);
	}
	template <typename T = void> T SetSceneActive() {
		return ((T (*)(SceneInfo*))(Il2CppBase() + 0x2DF8700))(this);
	}
	template <typename T = void> T RefreshFixedSceneMeshRendererBound() {
		return ((T (*)(SceneInfo*))(Il2CppBase() + 0x2DF88E4))(this);
	}
	template <typename T = void> T RefreshLODGroupDist() {
		return ((T (*)(SceneInfo*))(Il2CppBase() + 0x2DF8CEC))(this);
	}
	template <typename T = void> T SetAutoGeneratedLodGroupsSize(Il2CppList<float>* lodDist) {
		return ((T (*)(SceneInfo*, Il2CppList<float>*))(Il2CppBase() + 0x2DF909C))(this, lodDist);
	}
	template <typename T = void> T DestroyDetailsForVeryLowQuality() {
		return ((T (*)(SceneInfo*))(Il2CppBase() + 0x2DF8EAC))(this);
	}
	template <typename T = void> T RefreshCutomLODValueForVeryLowQuality() {
		return ((T (*)(SceneInfo*))(Il2CppBase() + 0x2DF93A8))(this);
	}
	template <typename T = void> T ClearFixedSceneMeshRendererBounds() {
		return ((T (*)(SceneInfo*))(Il2CppBase() + 0x2DF9568))(this);
	}
	template <typename T = void> T ClearHideInLowRendererRecord() {
		return ((T (*)(SceneInfo*))(Il2CppBase() + 0x2DF96BC))(this);
	}
	template <typename T = void> T AddToHideInLowRendererRecord(uintptr_t r) {
		return ((T (*)(SceneInfo*, uintptr_t))(Il2CppBase() + 0x2DF97C0))(this, r);
	}
	template <typename T = void> T xLuaBaseProxy_OnDestroy() {
		return ((T (*)(SceneInfo*))(Il2CppBase() + 0x2DF9A5C))(this);
	}
	template <typename T = void> T xLuaBaseProxy_Start() {
		return ((T (*)(SceneInfo*))(Il2CppBase() + 0x2DF9A64))(this);
	}

};

}
